pipeline {
    options {
        timestamps()
        skipDefaultCheckout()
        disableConcurrentBuilds()
    }
    agent {
        node { label 'translator && aws && build' }
    }
    parameters {
        string(name: 'BUILD_VERSION', defaultValue: '', description: 'The build version to deploy (mandatory)')
        string(name: 'AWS_REGION', defaultValue: 'us-east-1', description: 'AWS Region to deploy')
        string(name: 'KUBERNETES_CLUSTER_NAME', defaultValue: 'translator-eks-prod-blue-cluster', description: 'AWS EKS that will host this application')
    }
    environment {
        DEPLOY_ENV = "prod"
    }
    stages {
        stage('Clean and checkout') {
            steps {
                script {
                    if (params.BUILD_VERSION == '') { 
                        currentBuild.result = 'ABORTED'
                        error('BUILD_VERSION not set')
                    }
                }
                cleanWs()
                checkout scm
                sshagent (credentials: ['Github-adesina']) {
                    sh 'git clone -b develop git@github.com:aojesanmi/translator-devops.git'
                }
            }
        }
        stage('Deploy') {
            steps {
                configFileProvider([
                    configFile(fileId: 'values-prod.yaml', targetLocation: 'values-ncats.yaml')
                ]){
                    withCredentials([
                        file(
                            credentialsId: 'sri-git-crypt.key.asc',
                            variable: 'cryptasc'),
                        file(
                            credentialsId: 'sri-git-crypt.key.pwd',
                            variable: 'cryptpwd'),
                    ]){
                        withAWS(credentials:'eks-prod-access') {
                            sh '''
                            cd translator-devops
                            # copy secret files to current directory
                            cp $cryptasc sri-git-crypt.key.asc
                            cp $cryptpwd sri-git-crypt.key.pwd
                            # git crypt unlock the repo
                            gpg --pinentry-mode=loopback --passphrase-file sri-git-crypt.key.pwd --decrypt sri-git-crypt.key.asc | git-crypt unlock -
                            cd helm/filter_results_top_n
                            aws --region ${AWS_REGION} eks update-kubeconfig --name ${KUBERNETES_CLUSTER_NAME}
                            cp -R ../../../ops/sri/filter_results_top_n/deploy/* ./
                            mv ../../../values-ncats.yaml ./jenkins-values-ncats.yaml
                            mv ncats-prod-values.yaml ./values-ncats.yaml
                            /bin/bash deploy.sh
                            '''
                        }
                    }
                }
            }
        }
    }
}